---
import { Image } from 'astro:assets'
import FormattedDate from '@/components/FormattedDate.astro'
import ArrowUp from '@/components/icons/ArrowUp.astro'

// De nuevo: simplificamos el destructuring para que TS no se queje de props faltantes
const { id, data, readTime, slug } = Astro.props
const { title, description, pubDate, heroImage, category } = data
---

<link rel='stylesheet' href='/src/styles/PostCard.css' />

<article class='card-post group'>
	<a class='card-image-wrapper' href={`/post/${slug}/`}>
		<Image
			src={heroImage}
			width={600}
			height={200}
			format='webp'
			class='card-image'
			alt={`Imagen de ${title}`}
		/>
		<div class='card-overlay'>
			<div class='card-overlay-background'></div>
			<div class='card-overlay-content'>
				<div class='flex flex-col items-center justify-center'>
					<FormattedDate date={new Date(pubDate)} />
					<span class='text-sm text-gray-200'>{readTime} min</span>
				</div>
				<span class='text-sm text-yellow-300 font-medium'>{category}</span>
			</div>
		</div>
	</a>

	<div class='card-body'>
		<a class='card-title' href={`/post/${slug}/`}>{title}</a>
		<p class='card-excerpt'>{description}</p>
		<footer class='card-footer'>
			<a href={`/post/${slug}/`} class='read-post-link' aria-label={`Leer ${title}`}>
				Read Post
				<span class='read-icon'>
					<ArrowUp width='18' height='18' />
				</span>
			</a>
		</footer>
	</div>
</article>

<script>
	import { animate } from 'motion'

	document.addEventListener('DOMContentLoaded', () => {
		const images = document.querySelectorAll('img')
		const showAnimations = localStorage.getItem('animations') === 'true'

		if (showAnimations) {
			animate(
				'.effect',
				{
					opacity: [0, 1],
					clipPath: ['circle(0% at 0% 0%)', 'circle(100% at 50% 50%)']
				},
				{ duration: 2, easing: 'ease' }
			)
		} else {
			images.forEach((img) => {
				img.classList.remove('opacity-0')
			})
		}
	})
</script>
